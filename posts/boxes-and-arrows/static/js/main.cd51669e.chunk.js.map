{"version":3,"sources":["plus.svg","minus.svg","reducers/svg.ts","math/rect.ts","shapes/Rect.tsx","reducers/shapes/newRect.ts","reducers/shapes/shape.ts","reducers/shapes/select.ts","reducers/shapes/drag.ts","reducers/shapes/resize.ts","reducers/shapes/groupSelect.ts","shapes/Arrowhead.tsx","math/line.ts","reducers/errors.ts","shapes/Arrow.tsx","shapes/Text.tsx","shapes/Shape.tsx","components/ShapesContainer.tsx","components/GroupSelect.tsx","components/Svg.tsx","components/HiddenTextInput.tsx","components/DrawingBoard.tsx","components/Cockpit.tsx","components/ToastContainer.tsx","pages/DrawingPage.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","zoomLeveltoScaleMap","1","2","3","4","5","6","7","8","9","initialState","topLeftX","topLeftY","translateX","translateY","scale","zoomLevel","pan","dirty","svgSlice","createSlice","name","reducers","changeZoomLevel","state","action","n","min","max","payload","Math","invertX","invertY","k","wheelEnd","endPan","dirtySvg","cleanSvg","actions","svgReducer","reducer","isOverlapping","r1","r2","x","width","y","height","outline","rects","length","Error","first","minX","minY","maxX","maxY","forEach","r","Rect","React","memo","props","id","dispatch","useDispatch","shape","useSelector","shapes","data","draggedId","drag","selected","select","isGroupSelected","groupSelect","selectedShapeIds","isSelected","textX","deltaWidth","textY","deltaHeight","transform","cursor","rectScale","createdAtZoomLevel","fontSize","radiusSize","strokeWidth","selectedStrokeDashArray","groupStrokeDashArray","groupCursor","SelectionCircles","startResizeRect","e","anchor","stopPropagation","startResize","originalX","clientX","originalY","clientY","fill","onMouseDown","cx","cy","isGroupingRect","altKey","drawArrow","startNewRectByClick","clickX","clickY","startNewRectByDrag","selectShape","startDrag","handleGroupMouseDown","rx","ry","fillOpacity","stroke","strokeDasharray","textAnchor","textRendering","text","handleMouseDown","uid","v4","endNewRectByClick","createAsyncThunk","args","thunkAPI","a","getState","svg","newRectByClick","rect","type","reorder","order","idx","findIndex","splice","insertIdx","i","s","t","push","shapesSlice","shapeOrder","groupDrag","mouse","resize","endNewRectByDrag","addShape","raiseShape","deleteShape","filter","shapeId","arrow","fromId","toId","selectId","existing","Object","values","find","isEditing","fromShape","toShape","arrowId","selectedShapeEditText","hasOwnProperty","cancelSelect","endDrag","svgScale","endResize","svgTopLeftX","svgTopLeftY","svgZoomLevel","startDragSelection","selectionRect","resizeDragSelection","map","fromEntries","endDragSelection","keys","endGroupDrag","extraReducers","fulfilled","rejected","shapesReducer","Arrowhead","color","rotation","rotationAngleFromXInRadians","PI","direction","x1","y1","x2","y2","intersects","l1","l2","p","q","x3","y3","x4","y4","errorsSlice","addError","error","message","clearErrors","errorReducer","Arrow","offset","r1Line","r2Line","r1X","r1Y","r1Height","r1Width","r1XMid","r1YMid","r2X","r2Y","r2Height","r2Width","r2XMid","r2YMid","angle","atan2","r1NW","r1NE","r1SW","r1SE","r2NW","r2NE","r2SW","r2SE","r1Below","r1Above","r1Left","r1Right","r2Below","r2Above","r2Left","r2Right","slopeTheta","slopeLine","r1Offset","r2Offset","arrowheadRotation","idFn","Text","style","NewShape","ShapesContainer","key","GroupSelect","selectionOutline","borderPadding","dashArray","useState","setGroupDrag","handleMouseMove","startX","startY","handleMouseUp","useEffect","window","addEventListener","capture","removeEventListener","debouncedOnWheelEnd","debounce","Svg","isDragging","isGroupSelecting","newRectByClickState","isNewRectByDragState","svgState","isResizing","setTopLeftX","setTopLeftY","setTranslateX","setTranslateY","setScale","setZoomLevel","setPan","selectMode","setSelectMode","onKeyDownHandler","onKeyUpHandler","handleWheel","scaleFactor","deltaY","deltaMode","updatedScale","pow","updatedTopLeftX","updatedTopLeftY","existingZoomLevel","modifiedMap","0","Infinity","10","lower","upper","zoomLevelBucket","background","onMouseMove","onMouseUp","onWheel","HiddenTextInput","undefined","handler","code","inputEl","useRef","inputValue","current","focus","padding","border","opacity","ref","onChange","event","target","value","DrawingBoard","entries","rect1Id","rect2Id","display","flex","Cockpit","PositionDisplay","setCursor","mouseMoveFn","flexFlow","backgroundColor","borderRadius","boxShadow","minWidth","maxWidth","justifyContent","borderTopLeftRadius","borderBottomLeftRadius","toFixed","borderLeft","margin","borderTopRightRadius","borderBottomRightRadius","ZoomLevelDisplay","alignSelf","marginBottom","src","plus","alt","onClick","borderTop","borderBottom","minus","Toast","minHeight","paddingLeft","paddingRight","paddingBottom","ToastContainer","errors","DrawingPage","className","position","bottom","right","top","rootReducer","combineReducers","store","configureStore","client","ApolloClient","App","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.cd51669e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/plus.5af51bb4.svg\";","module.exports = __webpack_public_path__ + \"static/media/minus.bf38b4f0.svg\";","import { createSlice, CaseReducer, PayloadAction } from '@reduxjs/toolkit';\n\nexport const zoomLeveltoScaleMap: {\n  [key: number]: number;\n} = {\n  1: 1 * 8 ** -4,\n  2: 1 * 8 ** -3,\n  3: 1 * 8 ** -2,\n  4: 1 * 8 ** -1,\n  5: 1 * 8 ** 0,\n  6: 1 * 8 ** 1,\n  7: 1 * 8 ** 2,\n  8: 1 * 8 ** 3,\n  9: 1 * 8 ** 4,\n};\n\nexport interface SVGState {\n  topLeftX: number;\n  topLeftY: number;\n  translateX: number;\n  translateY: number;\n  scale: number;\n  zoomLevel: number;\n  pan: PanState | null;\n  dirty: boolean;\n}\n\ninterface PanState {\n  clickX: number;\n  clickY: number;\n}\n\ninterface StartPan {\n  clickX: number;\n  clickY: number;\n}\n\ninterface Pan {\n  clickX: number;\n  clickY: number;\n}\n\ninterface PanEnd {\n  topLeftX: number;\n  topLeftY: number;\n}\n\ninterface ChangeZoomLevel {\n  zoomLevel: number;\n}\n\ninterface WheelEnd {\n  topLeftX: number;\n  topLeftY: number;\n  scale: number;\n  zoomLevel: number;\n}\n\nconst changeZoomLevelFn: CaseReducer<\n  SVGState,\n  PayloadAction<ChangeZoomLevel>\n> = (state, action) => {\n  // TODO: grab (x,y) as center of viewport\n  const x = 640;\n  const y = 360;\n  const zoomLevel = bound(action.payload.zoomLevel, 1, 9);\n\n  const invertX = (x - state.topLeftX) / state.scale;\n  const invertY = (y - state.topLeftY) / state.scale;\n  const k = Math.max(0, zoomLeveltoScaleMap[zoomLevel]);\n\n  state.zoomLevel = action.payload.zoomLevel;\n  state.scale = k;\n  state.topLeftX = x - invertX * k;\n  state.topLeftY = y - invertY * k;\n};\n\n// force `n` to be between min and max (inclusive)\nfunction bound(n: number, min: number, max: number): number {\n  return Math.min(Math.max(n, min), max);\n}\n\nconst wheelEndFn: CaseReducer<SVGState, PayloadAction<WheelEnd>> = (\n  state,\n  action\n) => {\n  const { topLeftX, topLeftY, scale, zoomLevel } = action.payload;\n\n  state.topLeftX = topLeftX;\n  state.topLeftY = topLeftY;\n  state.scale = scale;\n  state.zoomLevel = zoomLevel;\n};\n\nconst endPanFn: CaseReducer<SVGState, PayloadAction<PanEnd>> = (\n  state,\n  action\n) => {\n  state.topLeftX = action.payload.topLeftX;\n  state.topLeftY = action.payload.topLeftY;\n};\n\nconst dirtySvgFn: CaseReducer<SVGState, PayloadAction> = (state, action) => {\n  state.dirty = true;\n};\n\nconst cleanSvgFn: CaseReducer<SVGState, PayloadAction> = (state, action) => {\n  state.dirty = false;\n};\n\nconst initialState: SVGState = {\n  topLeftX: 0,\n  topLeftY: 0,\n  translateX: 0,\n  translateY: 0,\n  scale: zoomLeveltoScaleMap[5],\n  zoomLevel: 5,\n  pan: null,\n  dirty: false,\n};\n\nconst svgSlice = createSlice({\n  name: 'svg',\n  initialState: initialState,\n  reducers: {\n    changeZoomLevel: changeZoomLevelFn,\n    // wheel: wheelFn,\n    wheelEnd: wheelEndFn,\n    endPan: endPanFn,\n    dirtySvg: dirtySvgFn,\n    cleanSvg: cleanSvgFn,\n  },\n});\n\nexport const {\n  changeZoomLevel,\n  // wheel,\n  wheelEnd,\n  endPan,\n  dirtySvg,\n  cleanSvg,\n} = svgSlice.actions;\nconst svgReducer = svgSlice.reducer;\nexport default svgReducer;\n","interface Rect {\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n}\n\nexport function isOverlapping(r1: Rect, r2: Rect): boolean {\n  return (\n    ((r1.x < r2.x && r1.x + r1.width >= r2.x) ||\n      (r2.x < r1.x && r2.x + r2.width >= r1.x)) &&\n    ((r1.y < r2.y && r1.y + r1.height >= r2.y) ||\n      (r2.y < r1.y && r2.y + r2.height >= r1.y))\n  );\n}\n\n// Return rectangle that surrounds all input `rects`.\nexport function outline(...rects: Rect[]): Rect {\n  if (rects.length === 0) throw new Error('`outline` needs >0 input `rects`');\n  const first = rects[0];\n  let [minX, minY] = [first.x, first.y];\n  let [maxX, maxY] = [first.x + first.width, first.y + first.height];\n\n  rects.forEach((r) => {\n    minX = Math.min(minX, r.x);\n    minY = Math.min(minY, r.y);\n    maxX = Math.max(maxX, r.x + r.width);\n    maxY = Math.max(maxY, r.y + r.height);\n  });\n\n  return {\n    x: minX,\n    y: minY,\n    width: maxX - minX,\n    height: maxY - minY,\n  };\n}\n\nexport default Rect;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  selectShape,\n  drawArrow,\n  startDrag,\n  Anchor,\n  startResize,\n  startNewRectByClick,\n  startNewRectByDrag,\n} from '../reducers/shapes/shape';\nimport { RootState } from '../App';\nimport Shape, {\n  ShapeId,\n  Selectable,\n  Draggable,\n  TextEditable,\n  Resizable,\n} from './Shape';\nimport { zoomLeveltoScaleMap } from '../reducers/svg';\nimport { isOverlapping } from '../math/rect';\n\nexport const RECT_WIDTH = 150;\nexport const RECT_HEIGHT = 75;\n\nexport type RectProps = {\n  type: 'rect';\n  isGroupingRect: boolean;\n  createdAtZoomLevel: number;\n} & Shape &\n  Selectable &\n  Draggable &\n  TextEditable &\n  Resizable;\n\nconst Rect: React.FC<ShapeId> = React.memo((props) => {\n  const { id } = props;\n\n  const dispatch = useDispatch();\n\n  const shape = useSelector(\n    (state: RootState) => state.shapes.data[id] as RectProps\n  );\n\n  const draggedId = useSelector((state: RootState) => state.shapes.drag?.id);\n  const selected = useSelector(\n    (state: RootState) =>\n      !!state.shapes.select?.id && state.shapes.data[state.shapes.select?.id]\n  );\n  const isGroupSelected = useSelector(\n    (state: RootState) => !!state.shapes.groupSelect?.selectedShapeIds[id]\n  );\n  const isSelected = id === (selected && selected.id);\n\n  const [x, y] = [shape.x, shape.y];\n  const [textX, textY] = [\n    (shape.width + shape.deltaWidth) / 2,\n    (shape.height + shape.deltaHeight) / 2,\n  ];\n\n  const transform = `translate(${x + shape.translateX}, ${\n    y + shape.translateY\n  })`;\n  const cursor = draggedId === id ? 'grabbing' : 'grab';\n\n  const rectScale = zoomLeveltoScaleMap[shape.createdAtZoomLevel];\n  const fontSize = 14 / rectScale;\n  const radiusSize = 4 / rectScale;\n  const strokeWidth = 1 / rectScale;\n  const selectedStrokeDashArray = 5 / rectScale;\n  const groupStrokeDashArray = 3 / rectScale;\n  const groupCursor = isSelected\n    ? draggedId === id\n      ? 'grabbing'\n      : 'grab'\n    : 'auto';\n\n  function handleMouseDown(e: React.MouseEvent) {\n    e.stopPropagation();\n    if (\n      e.altKey &&\n      !!selected &&\n      !isOverlapping(shape, selected as RectProps) &&\n      !isSelected\n    ) {\n      dispatch(drawArrow(id));\n    } else {\n      dispatch(startDrag({ id: id, clickX: e.clientX, clickY: e.clientY }));\n      dispatch(selectShape(id));\n    }\n  }\n\n  function handleGroupMouseDown(e: React.MouseEvent) {\n    e.stopPropagation();\n\n    if (\n      e.altKey &&\n      !!selected &&\n      !isOverlapping(shape, selected as RectProps) &&\n      !isSelected\n    ) {\n      dispatch(drawArrow(id));\n    } else if (e.altKey) {\n      // endNewRect handled on MouseUp.\n      dispatch(startNewRectByClick({ clickX: e.clientX, clickY: e.clientY }));\n      dispatch(startNewRectByDrag({ clickX: e.clientX, clickY: e.clientY }));\n    } else {\n      dispatch(selectShape(id));\n      dispatch(startDrag({ id: id, clickX: e.clientX, clickY: e.clientY }));\n    }\n  }\n\n  const SelectionCircles = () => {\n    const radiusSize = 6 / zoomLeveltoScaleMap[shape.createdAtZoomLevel];\n    function startResizeRect(e: React.MouseEvent, anchor: Anchor) {\n      e.stopPropagation();\n      dispatch(\n        startResize({ id, anchor, originalX: e.clientX, originalY: e.clientY })\n      );\n    }\n\n    return (\n      <>\n        <circle\n          fill=\"cornflowerblue\"\n          r={radiusSize + 'px'}\n          cursor=\"nw-resize\"\n          onMouseDown={(e) => startResizeRect(e, 'NWAnchor')}\n        ></circle>\n        <circle\n          fill=\"cornflowerblue\"\n          r={radiusSize + 'px'}\n          cursor=\"ne-resize\"\n          onMouseDown={(e) => startResizeRect(e, 'NEAnchor')}\n          cx={shape.width + shape.deltaWidth}\n        ></circle>\n        <circle\n          fill=\"cornflowerblue\"\n          r={radiusSize + 'px'}\n          cursor=\"sw-resize\"\n          onMouseDown={(e) => startResizeRect(e, 'SWAnchor')}\n          cy={shape.height + shape.deltaHeight}\n        ></circle>\n        <circle\n          fill=\"cornflowerblue\"\n          r={radiusSize + 'px'}\n          cursor=\"se-resize\"\n          onMouseDown={(e) => startResizeRect(e, 'SEAnchor')}\n          cx={shape.width + shape.deltaWidth}\n          cy={shape.height + shape.deltaHeight}\n        ></circle>\n      </>\n    );\n  };\n\n  if (!shape) return <></>;\n  if (shape.isGroupingRect) {\n    return (\n      <g\n        id={id}\n        transform={transform}\n        cursor={groupCursor}\n        onMouseDown={(e) => handleGroupMouseDown(e)}\n      >\n        <rect\n          width={shape.width + shape.deltaWidth}\n          height={shape.height + shape.deltaHeight}\n          rx=\"4\"\n          ry=\"4\"\n          fill=\"darkgray\"\n          fillOpacity={0.2}\n          stroke={isSelected || isGroupSelected ? 'cornflowerblue' : 'darkgray'}\n          strokeDasharray={\n            isSelected || isGroupSelected\n              ? selectedStrokeDashArray + 'px'\n              : groupStrokeDashArray + 'px'\n          }\n        ></rect>\n        <text\n          x={textX}\n          y={20 / zoomLeveltoScaleMap[shape.createdAtZoomLevel]}\n          textAnchor=\"middle\"\n          textRendering=\"optimizeSpeed\"\n          fontSize={fontSize + 'px'}\n        >\n          {shape.text}\n        </text>\n        {isSelected && <SelectionCircles></SelectionCircles>}\n      </g>\n    );\n  }\n  return (\n    <g\n      id={id}\n      transform={transform}\n      cursor={cursor}\n      onMouseDown={(e) => handleMouseDown(e)}\n    >\n      <rect\n        width={shape.width + shape.deltaWidth}\n        height={shape.height + shape.deltaHeight}\n        rx={radiusSize + 'px'}\n        ry={radiusSize + 'px'}\n        fill=\"white\"\n        stroke={isSelected || isGroupSelected ? 'cornflowerblue' : 'darkgray'}\n        strokeWidth={strokeWidth + 'px'}\n        strokeDasharray={\n          isSelected || isGroupSelected\n            ? selectedStrokeDashArray + 'px'\n            : 0 + 'px'\n        }\n      ></rect>\n      <text\n        x={textX}\n        y={textY}\n        textAnchor=\"middle\"\n        textRendering=\"optimizeSpeed\"\n        fontSize={fontSize + 'px'}\n      >\n        {shape.text}\n      </text>\n      {isSelected && <SelectionCircles></SelectionCircles>}\n    </g>\n  );\n});\n\nexport default Rect;\n","import { PayloadAction, createAsyncThunk } from '@reduxjs/toolkit';\nimport { ShapeReducer, reorder } from './shape';\nimport { RectProps, RECT_WIDTH, RECT_HEIGHT } from '../../shapes/Rect';\nimport { v4 } from 'uuid';\nimport { zoomLeveltoScaleMap } from '../svg';\nimport { RootState } from '../../App';\n\ninterface StartNewRectByClick {\n  clickX: number;\n  clickY: number;\n}\n\ninterface EndNewRectByClick {\n  clickX: number;\n  clickY: number;\n}\n\ninterface StartNewRectByDrag {\n  clickX: number;\n  clickY: number;\n}\n\ninterface NewRectByDrag {\n  clickX: number;\n  clickY: number;\n  svgTopLeftX: number;\n  svgTopLeftY: number;\n  svgScale: number;\n  svgZoomLevel: number;\n}\n\nconst uid = () => `id-${v4()}`;\n\nexport const startNewRectByClickFn: ShapeReducer<PayloadAction<\n  StartNewRectByClick\n>> = (state, action) => {\n  state.newRectByClick = {\n    clickX: action.payload.clickX,\n    clickY: action.payload.clickY,\n  };\n};\n\nexport const endNewRectByClick = createAsyncThunk(\n  'shapes/endNewRectByClick',\n  async (args: EndNewRectByClick, thunkAPI) => {\n    const { clickX, clickY } = args;\n\n    const state = thunkAPI.getState() as RootState;\n    const { svg } = state;\n\n    if (\n      state.shapes.newRectByClick?.clickX !== clickX ||\n      state.shapes.newRectByClick?.clickY !== clickY\n    )\n      return;\n\n    const id = uid();\n    const x = (clickX - svg.topLeftX) / svg.scale;\n    const y = (clickY - svg.topLeftY) / svg.scale;\n\n    const width = RECT_WIDTH / zoomLeveltoScaleMap[svg.zoomLevel];\n    const height = RECT_HEIGHT / zoomLeveltoScaleMap[svg.zoomLevel];\n\n    const rect: RectProps = {\n      type: 'rect',\n      id: id,\n      text: 'Concept',\n      x: x - width / 2,\n      y: y - height / 2,\n      translateX: 0,\n      translateY: 0,\n      width: width,\n      height: height,\n      deltaWidth: 0,\n      deltaHeight: 0,\n      isGroupingRect: false,\n      createdAtZoomLevel: svg.zoomLevel,\n    };\n\n    return rect;\n  }\n);\n\nexport const startNewRectByDragFn: ShapeReducer<PayloadAction<\n  StartNewRectByDrag\n>> = (state, action) => {\n  state.endNewRectByDrag = {\n    clickX: action.payload.clickX,\n    clickY: action.payload.clickY,\n    shape: null,\n  };\n};\n\nexport const endNewRectByDragFn: ShapeReducer<PayloadAction<NewRectByDrag>> = (\n  state,\n  action\n) => {\n  if (!state.endNewRectByDrag) {\n    throw new Error(\n      'Cannot create rect on drag. Missing endNewRectByDrag state. Was ODYS_START_NEW_RECT_BY_DRAG_ACTION called first?'\n    );\n  }\n\n  const {\n    clickX,\n    clickY,\n    svgTopLeftX,\n    svgTopLeftY,\n    svgScale,\n    svgZoomLevel,\n  } = action.payload;\n\n  if (state.endNewRectByDrag.shape) {\n    state.endNewRectByDrag = null;\n  } else if (state.endNewRectByDrag && !state.endNewRectByDrag.shape) {\n    const id = uid();\n    const x = (state.endNewRectByDrag.clickX - svgTopLeftX) / svgScale;\n    const y = (state.endNewRectByDrag.clickY - svgTopLeftY) / svgScale;\n    const width =\n      (clickX - svgTopLeftX) / svgScale -\n      (state.endNewRectByDrag.clickX - svgTopLeftX) / svgScale;\n    const height =\n      (clickY - svgTopLeftY) / svgScale -\n      (state.endNewRectByDrag.clickY - svgTopLeftY) / svgScale;\n\n    const rect: RectProps = {\n      type: 'rect',\n      id: id,\n      text: 'Group',\n      x: x,\n      y: y,\n      translateX: 0,\n      translateY: 0,\n      width: width,\n      height: height,\n      deltaWidth: 0,\n      deltaHeight: 0,\n      isGroupingRect: true,\n      createdAtZoomLevel: svgZoomLevel,\n    };\n\n    state.endNewRectByDrag.shape = rect as any;\n    state.data[id] = rect as any;\n    reorder(state.data, state.shapeOrder, rect);\n\n    state.resize = {\n      id: id,\n      anchor: 'SEAnchor',\n      originalX: state.endNewRectByDrag.clickX,\n      originalY: state.endNewRectByDrag.clickY,\n      clickX: 0,\n      clickY: 0,\n    };\n  }\n};\n","import Shape, { TextEditable, ShapeId } from '../../shapes/Shape';\n\nimport {\n  createSlice,\n  PayloadAction,\n  CaseReducer,\n  Action,\n} from '@reduxjs/toolkit';\n\nimport { ArrowProps } from '../../shapes/Arrow';\nimport { startDragFn, dragFn, endDragFn } from './drag';\nimport { startResizeFn, resizeFn, endResizeFn } from './resize';\nimport { selectShapeFn, cancelSelectFn } from './select';\nimport { v4 } from 'uuid';\nimport {\n  startNewRectByClickFn,\n  endNewRectByClick,\n  startNewRectByDragFn,\n  endNewRectByDragFn,\n} from './newRect';\nimport { RectProps } from '../../shapes/Rect';\nimport Rect from '../../math/rect';\nimport {\n  startDragSelectionFn,\n  resizeDragSelectionFn,\n  endDragSelectionFn,\n  endGroupDragFn,\n} from './groupSelect';\n\nexport type ShapeID = string;\nexport type NEAnchor = 'NEAnchor';\nexport type NWAnchor = 'NWAnchor';\nexport type SEAnchor = 'SEAnchor';\nexport type SWAnchor = 'SWAnchor';\nexport type Anchor = NEAnchor | NWAnchor | SEAnchor | SWAnchor;\n\nconst uid = () => `id-${v4()}`;\n\nexport type ShapeReducer<T extends Action<any>> = CaseReducer<ShapeState, T>;\n\ninterface SelectedShape {\n  id: string;\n  isEditing: boolean;\n}\n\ninterface DragState {\n  id: string;\n  clickX: number;\n  clickY: number;\n}\n\ninterface GroupSelectState {\n  selectionRect: Rect | null;\n  selectedShapeIds: { [key: string]: boolean };\n  outline: Rect;\n}\n\ninterface GroupDragState {\n  startX: number;\n  startY: number;\n}\n\ninterface MouseState {\n  clickX: number;\n  clickY: number;\n}\n\ninterface ResizeState {\n  id: string;\n  anchor: Anchor;\n  originalX: number;\n  originalY: number;\n  clickX: number;\n  clickY: number;\n}\n\ninterface NewRectByClickState {\n  clickX: number;\n  clickY: number;\n}\n\ninterface NewRectByDragState {\n  clickX: number;\n  clickY: number;\n  shape: Shape | null;\n}\n\ninterface ShapeData {\n  [id: string]: Shape;\n}\n\nexport interface ShapeState {\n  data: ShapeData;\n  shapeOrder: string[];\n  select: SelectedShape | null;\n  drag: DragState | null;\n  groupSelect: GroupSelectState | null;\n  groupDrag: GroupDragState | null;\n  resize: ResizeState | null;\n  newRectByClick: NewRectByClickState | null;\n  endNewRectByDrag: NewRectByDragState | null;\n  mouse: MouseState | null;\n}\n\nconst initialState: ShapeState = {\n  data: {},\n  shapeOrder: [],\n  select: null,\n  groupSelect: null,\n  groupDrag: null,\n  drag: null,\n  mouse: null,\n  resize: null,\n  newRectByClick: null,\n  endNewRectByDrag: null,\n};\n\nexport function reorder(shapes: ShapeData, order: string[], shape: Shape) {\n  // remove from `order` array if present\n  const idx = order.findIndex((id) => id === shape.id);\n  if (idx !== -1) {\n    order.splice(idx, 1);\n  }\n\n  // grouping rects must come first. they are ordered against each other by `x` position.\n  if (shape.type === 'rect') {\n    const rect = shape as RectProps;\n\n    if (rect.isGroupingRect) {\n      let insertIdx = 0;\n      for (let i = 0; i < order.length; i++) {\n        const id = order[i];\n        const s = shapes[id];\n\n        if (s.type === 'rect') {\n          const t = s as RectProps;\n          if (t.isGroupingRect && t.x < rect.x) continue;\n        }\n        insertIdx = i;\n        break;\n      }\n      order.splice(insertIdx, 0, shape.id);\n      return;\n    }\n  }\n\n  // by default, add to top\n  order.push(shape.id);\n}\n\nconst addShapeFn: ShapeReducer<PayloadAction<Shape>> = (state, action) => {\n  state.data[action.payload.id] = action.payload as any;\n  reorder(state.data, state.shapeOrder, action.payload);\n};\n\nconst raiseShapeFn: ShapeReducer<PayloadAction<ShapeID>> = (state, action) => {\n  const id = action.payload;\n  if (!state.data[id]) {\n    throw new Error(`Cannot find shape with ${id}`);\n  }\n\n  reorder(state.data, state.shapeOrder, state.data[id]);\n};\n\nconst deleteShapeFn: ShapeReducer<PayloadAction<ShapeID>> = (state, action) => {\n  const id = action.payload;\n  if (!state.data[id]) {\n    throw new Error(`Cannot find shape with ${id}`);\n  }\n\n  delete state.data[id];\n  state.shapeOrder = state.shapeOrder.filter((shapeId) => {\n    if (shapeId === id) {\n      return false;\n    }\n\n    const shape = state.data[shapeId];\n    if (shape.type === 'arrow') {\n      const arrow = shape as ArrowProps;\n      if (arrow.fromId === id || arrow.toId === id) return false;\n    }\n\n    return true;\n  });\n};\n\nconst drawArrowFn: ShapeReducer<PayloadAction<ShapeID>> = (state, action) => {\n  if (!state.select) {\n    throw new Error('Cannot draw arrow without selected object.');\n  }\n\n  const selectId = state.select.id;\n\n  // cannot draw arrow to self.\n  if (selectId === action.payload) {\n    return;\n  }\n\n  // cannot duplicate existing arrow.\n  const existing = Object.values(state.data).find((s) => {\n    if (s.type === 'arrow') {\n      const arrow = s as ArrowProps;\n      return arrow.fromId === selectId && arrow.toId === action.payload;\n    }\n    return false;\n  });\n\n  if (existing) {\n    state.select = {\n      id: existing.id,\n      isEditing: false,\n    };\n    return;\n  }\n\n  // cannot draw arrow across zoomLevels\n  const fromShape = state.data[selectId] as RectProps;\n  const toShape = state.data[action.payload] as RectProps;\n  if (!fromShape) throw new Error(`Cannot find shape (${selectId})`);\n  if (!toShape) throw new Error(`Cannot find shape (${action.payload})`);\n  if (fromShape.type !== 'rect')\n    throw new Error('Can only draw arrows from Rects.');\n  if (toShape.type !== 'rect')\n    throw new Error('Can only draw arrows to Rects.');\n  if (fromShape.createdAtZoomLevel !== toShape.createdAtZoomLevel) {\n    throw new Error(\n      `Cannot draw arrow across zoomLevel (createdAtZoomLevels dont match)`\n    );\n  }\n\n  const arrowId = uid();\n  const arrow = {\n    type: 'arrow',\n    id: arrowId,\n    fromId: selectId,\n    toId: action.payload,\n    text: '',\n    createdAtZoomLevel: fromShape.createdAtZoomLevel,\n  } as ArrowProps;\n\n  state.data[arrowId] = arrow;\n  reorder(state.data, state.shapeOrder, arrow);\n  state.select = {\n    id: arrowId,\n    isEditing: false,\n  };\n};\n\nconst selectedShapeEditTextFn: ShapeReducer<PayloadAction<string>> = (\n  state,\n  action\n) => {\n  const { select } = state;\n  if (!select) {\n    throw new Error(\n      `[shapes/editText] Cannot edit text if a shape is not selected. ODYS_SELECT_SHAPE_ACTION should have fired first.`\n    );\n  }\n\n  const { id } = select;\n  if (!state.data[id]) {\n    throw new Error(`Cannot find shape with ${id}`);\n  }\n\n  const shape = state.data[id] as Shape & TextEditable;\n  if (!shape.hasOwnProperty('text')) {\n    throw new Error(\n      `[shapes/editText] Shape is missing 'text' property (${select.id})`\n    );\n  }\n\n  shape.text = action.payload;\n  select.isEditing = true;\n};\n\nconst shapesSlice = createSlice({\n  name: 'shapes',\n  initialState: initialState,\n  reducers: {\n    addShape: addShapeFn,\n    raiseShape: raiseShapeFn,\n    deleteShape: deleteShapeFn,\n    drawArrow: drawArrowFn,\n    selectedShapeEditText: selectedShapeEditTextFn,\n    // select\n    selectShape: selectShapeFn,\n    cancelSelect: cancelSelectFn,\n    //drag\n    startDrag: startDragFn,\n    drag: dragFn,\n    endDrag: endDragFn,\n    //resize\n    startResize: startResizeFn,\n    resize: resizeFn,\n    endResize: endResizeFn,\n    //newRect\n    startNewRectByClick: startNewRectByClickFn,\n    startNewRectByDrag: startNewRectByDragFn,\n    endNewRectByDrag: endNewRectByDragFn,\n    // groupSelect\n    startDragSelection: startDragSelectionFn,\n    resizeDragSelection: resizeDragSelectionFn,\n    endDragSelection: endDragSelectionFn,\n    endGroupDrag: endGroupDragFn,\n  },\n  extraReducers: {\n    [endNewRectByClick.fulfilled as any]: (state, action) => {\n      const rect = action.payload as RectProps;\n      if (!rect) return;\n\n      state.drag = null;\n      state.newRectByClick = null;\n      state.endNewRectByDrag = null;\n      state.select = {\n        id: rect.id,\n        isEditing: false,\n      };\n\n      state.data[rect.id] = rect as any;\n      reorder(state.data, state.shapeOrder, rect);\n    },\n    [endNewRectByClick.rejected as any]: (state, action) => {},\n  },\n});\n\nexport const {\n  addShape,\n  deleteShape,\n  selectedShapeEditText,\n  cancelSelect,\n  selectShape,\n  drawArrow,\n  startDrag,\n  drag,\n  endDrag,\n  startResize,\n  resize,\n  endResize,\n  startNewRectByClick,\n  startNewRectByDrag,\n  endNewRectByDrag,\n  startDragSelection,\n  resizeDragSelection,\n  endDragSelection,\n  endGroupDrag,\n} = shapesSlice.actions;\nconst shapesReducer = shapesSlice.reducer;\nexport default shapesReducer;\n","import { ShapeReducer, ShapeID, reorder } from './shape';\nimport { PayloadAction } from '@reduxjs/toolkit';\n\nexport const selectShapeFn: ShapeReducer<PayloadAction<ShapeID>> = (\n  state,\n  action\n) => {\n  const id = action.payload;\n  if (!state.data[id]) {\n    throw new Error(`Cannot find shape with ${id}`);\n  }\n\n  state.select = {\n    id,\n    isEditing: false,\n  };\n  state.groupSelect = null;\n  reorder(state.data, state.shapeOrder, state.data[id]);\n};\n\nexport const cancelSelectFn: ShapeReducer<PayloadAction> = (state, action) => {\n  state.select = null;\n  state.groupSelect = null;\n};\n","import { PayloadAction } from '@reduxjs/toolkit';\nimport { ShapeReducer, reorder } from './shape';\nimport { RectProps } from '../../shapes/Rect';\n\ninterface StartDrag {\n  id: string;\n  clickX: number;\n  clickY: number;\n}\n\ninterface Drag {\n  clickX: number;\n  clickY: number;\n  scale: number;\n}\n\nexport const startDragFn: ShapeReducer<PayloadAction<StartDrag>> = (\n  state,\n  action\n) => {\n  state.drag = {\n    id: action.payload.id,\n    clickX: action.payload.clickX,\n    clickY: action.payload.clickY,\n  };\n};\n\nexport const dragFn: ShapeReducer<PayloadAction<Drag>> = (state, action) => {\n  if (!state.drag) {\n    throw new Error(\n      'Cannot shapes/drag without `state.drag` (did shapes/startDrag fire first?)'\n    );\n  }\n\n  const { id } = state.drag;\n  if (!state.data[id]) {\n    throw new Error(`Cannot find shape with ${id}`);\n  }\n\n  const shape = state.data[id] as RectProps;\n  shape.translateX =\n    (action.payload.clickX - state.drag.clickX) / action.payload.scale;\n  shape.translateY =\n    (action.payload.clickY - state.drag.clickY) / action.payload.scale;\n};\n\nexport const endDragFn: ShapeReducer<PayloadAction> = (state, action) => {\n  if (!state.drag) {\n    throw new Error(\n      'Could not end drag action. Was it started with ODYS_START_DRAG_ACTION?'\n    );\n  }\n\n  const { id } = state.drag;\n  if (!state.data[id]) {\n    throw new Error(`Cannot find shape with ${id}`);\n  }\n\n  const shape = state.data[id] as RectProps;\n  shape.x = (shape.x as number) + (shape.translateX as number);\n  shape.y = (shape.y as number) + (shape.translateY as number);\n  shape.translateX = 0;\n  shape.translateY = 0;\n\n  reorder(state.data, state.shapeOrder, shape);\n  state.drag = null;\n};\n","import { PayloadAction } from '@reduxjs/toolkit';\nimport { ShapeReducer, Anchor } from './shape';\nimport { RectProps } from '../../shapes/Rect';\n\ninterface StartResize {\n  id: string;\n  anchor: Anchor;\n  originalX: number;\n  originalY: number;\n}\n\ninterface Resize {\n  clickX: number;\n  clickY: number;\n  svgScale: number;\n}\n\nexport const startResizeFn: ShapeReducer<PayloadAction<StartResize>> = (\n  state,\n  action\n) => {\n  state.resize = {\n    id: action.payload.id,\n    anchor: action.payload.anchor,\n    originalX: action.payload.originalX,\n    originalY: action.payload.originalY,\n    clickX: 0,\n    clickY: 0,\n  };\n};\n\nexport const resizeFn: ShapeReducer<PayloadAction<Resize>> = (\n  state,\n  action\n) => {\n  if (!state.resize) {\n    throw new Error(\n      'Cannot ODYS_RESIZE_ACTION without `state.resize` (did ODYS_START_RESIZE_ACTION fire first?)'\n    );\n  }\n\n  const { id } = state.resize;\n  if (!state.data[id]) {\n    throw new Error(`Cannot find shape with ${id}`);\n  }\n\n  const { clickX, clickY, svgScale } = action.payload;\n  const { originalX, originalY } = state.resize;\n\n  let translateX = 0;\n  let translateY = 0;\n  let deltaWidth = 0;\n  let deltaHeight = 0;\n  switch (state.resize.anchor) {\n    case 'SEAnchor':\n      deltaWidth = (clickX - originalX) / svgScale;\n      deltaHeight = (clickY - originalY) / svgScale;\n      break;\n    case 'SWAnchor':\n      translateX = (clickX - originalX) / svgScale;\n      deltaWidth = (originalX - clickX) / svgScale;\n      deltaHeight = (clickY - originalY) / svgScale;\n      break;\n    case 'NEAnchor':\n      translateY = (clickY - originalY) / svgScale;\n      deltaWidth = (clickX - originalX) / svgScale;\n      deltaHeight = (originalY - clickY) / svgScale;\n      break;\n    case 'NWAnchor':\n      translateX = (clickX - originalX) / svgScale;\n      translateY = (clickY - originalY) / svgScale;\n      deltaWidth = (originalX - clickX) / svgScale;\n      deltaHeight = (originalY - clickY) / svgScale;\n      break;\n    default:\n      throw new Error(`Unknown anchor point ${state.resize.anchor}`);\n  }\n\n  const shape = state.data[id] as RectProps;\n  shape.translateX = translateX;\n  shape.translateY = translateY;\n  shape.deltaWidth = deltaWidth;\n  shape.deltaHeight = deltaHeight;\n};\n\nexport const endResizeFn: ShapeReducer<PayloadAction> = (state, action) => {\n  if (!state.resize) {\n    throw new Error(\n      'Could not end resize shape action. Was it started with ODYS_START_RESIZE_ACTION?'\n    );\n  }\n\n  const { id } = state.resize;\n  if (!state.data[id]) {\n    throw new Error(`Cannot find shape with ${id}`);\n  }\n\n  const shape = state.data[id] as RectProps;\n  shape.x = shape.x + shape.translateX;\n  shape.y = shape.y + shape.translateY;\n  shape.translateX = 0;\n  shape.translateY = 0;\n  shape.width = shape.width + shape.deltaWidth;\n  shape.height = shape.height + shape.deltaHeight;\n  shape.deltaWidth = 0;\n  shape.deltaHeight = 0;\n\n  state.drag = null;\n  state.newRectByClick = null;\n  state.resize = null;\n  // state.shapeOrder = [\n  //   ...state.shapeOrder.filter((shapeID) => shapeID !== id),\n  //   id,\n  // ];\n};\n","import { ShapeReducer } from './shape';\nimport { PayloadAction } from '@reduxjs/toolkit';\nimport Shape from '../../shapes/Shape';\nimport { isOverlapping, outline } from '../../math/rect';\nimport { RectProps } from '../../shapes/Rect';\n\ninterface startDragSelection {\n  x: number;\n  y: number;\n  svgTopLeftX: number;\n  svgTopLeftY: number;\n  svgScale: number;\n}\n\nexport const startDragSelectionFn: ShapeReducer<PayloadAction<\n  startDragSelection\n>> = (state, action) => {\n  const { x, y, svgTopLeftX, svgTopLeftY, svgScale } = action.payload;\n  state.groupSelect = {\n    selectionRect: {\n      x: (x - svgTopLeftX) / svgScale,\n      y: (y - svgTopLeftY) / svgScale,\n      width: 0,\n      height: 0,\n    },\n    selectedShapeIds: {},\n    outline: { x: 0, y: 0, width: 0, height: 0 },\n  };\n};\n\ninterface resizeDragSelection {\n  clickX: number;\n  clickY: number;\n  svgTopLeftX: number;\n  svgTopLeftY: number;\n  svgScale: number;\n}\n\nexport const resizeDragSelectionFn: ShapeReducer<PayloadAction<\n  resizeDragSelection\n>> = (state, action) => {\n  if (!state.groupSelect || !state.groupSelect.selectionRect)\n    throw new Error(\n      `shapes/startDragSelection must be called before shapes/resizeDragSelection`\n    );\n\n  const { selectionRect } = state.groupSelect;\n\n  const { clickX, clickY, svgTopLeftX, svgTopLeftY, svgScale } = action.payload;\n  const { x, y } = selectionRect;\n  const deltaWidth = (clickX - svgTopLeftX) / svgScale - x;\n  const deltaHeight = (clickY - svgTopLeftY) / svgScale - y;\n\n  selectionRect.width = deltaWidth;\n  selectionRect.height = deltaHeight;\n\n  const selectedShapeIds = Object.values(state.data)\n    .filter((s: Shape) => s.type === 'rect')\n    .filter((s) => isOverlapping(s as RectProps, selectionRect))\n    .map((s: Shape) => [s.id, true]);\n\n  state.groupSelect.selectedShapeIds = Object.fromEntries(selectedShapeIds);\n};\n\nexport const endDragSelectionFn: ShapeReducer<PayloadAction> = (\n  state,\n  action\n) => {\n  if (!state.groupSelect || !state.groupSelect.selectionRect)\n    throw new Error(\n      `shapes/startDragSelection must be called before shapes/endDragSelection`\n    );\n\n  state.groupSelect.selectionRect = null;\n  const { selectedShapeIds } = state.groupSelect;\n\n  const keys = Object.keys(selectedShapeIds);\n  if (keys.length === 0) {\n    return;\n  } else if (keys.length === 1) {\n    state.select = {\n      id: keys[0],\n      isEditing: false,\n    };\n    state.groupSelect.selectedShapeIds = {};\n  } else {\n    const rects = Object.keys(selectedShapeIds).map(\n      (id) => state.data[id] as RectProps\n    );\n    state.groupSelect.outline = outline(...rects);\n  }\n};\n\ninterface EndGroupDrag {\n  translateX: number;\n  translateY: number;\n}\nexport const endGroupDragFn: ShapeReducer<PayloadAction<EndGroupDrag>> = (\n  state,\n  action\n) => {\n  state.groupDrag = null;\n  if (!state.groupSelect) return;\n  Object.keys(state.groupSelect.selectedShapeIds).forEach((id) => {\n    const rect = state.data[id] as RectProps;\n    rect.x += action.payload.translateX;\n    rect.y += action.payload.translateY;\n  });\n  state.groupSelect.outline.x += action.payload.translateX;\n  state.groupSelect.outline.y += action.payload.translateY;\n};\n","import React from 'react';\nimport { zoomLeveltoScaleMap } from '../reducers/svg';\n\ntype ArrowheadProps = {\n  id: string;\n  x: number;\n  y: number;\n  isSelected: boolean;\n  rotationAngleFromXInRadians?: number;\n  direction: 'left' | 'right';\n  createdAtZoomLevel: number;\n};\n\nconst radiansToDegrees = (x: number) => x * (180 / Math.PI);\n\nconst Arrowhead: React.FC<ArrowheadProps> = React.memo((props) => {\n  const color = props.isSelected ? 'cornflowerblue' : 'grey';\n  const strokeWidth = 1 / zoomLeveltoScaleMap[props.createdAtZoomLevel];\n  const length = 5 / zoomLeveltoScaleMap[props.createdAtZoomLevel];\n\n  let rotation = radiansToDegrees(props.rotationAngleFromXInRadians || 0);\n  if (props.direction === 'left') {\n    rotation += 180;\n  }\n\n  const transform = `translate(${props.x}, ${props.y}) rotate(${rotation})`;\n\n  return (\n    <g transform={transform}>\n      <line\n        x1=\"0\"\n        y1=\"-0\"\n        x2={-length}\n        y2={-length}\n        stroke={color}\n        strokeWidth={strokeWidth + 'px'}\n      ></line>\n      <line\n        x1=\"0\"\n        y1=\"0\"\n        x2={-length}\n        y2={length}\n        stroke={color}\n        strokeWidth={strokeWidth + 'px'}\n      ></line>\n    </g>\n  );\n});\n\nexport default Arrowhead;\n","import Point from './point';\n\ninterface Line {\n  p: Point;\n  q: Point;\n}\n\n// https://en.wikipedia.org/wiki/Line%E2%80%93line_intersection\nexport function intersects(l1: Line, l2: Line): Point {\n  const x1 = l1.p.x;\n  const y1 = l1.p.y;\n\n  const x2 = l1.q.x;\n  const y2 = l1.q.y;\n\n  const x3 = l2.p.x;\n  const y3 = l2.p.y;\n\n  const x4 = l2.q.x;\n  const y4 = l2.q.y;\n\n  const x =\n    ((x1 * y2 - y1 * x2) * (x3 - x4) - (x1 - x2) * (x3 * y4 - y3 * x4)) /\n    ((x1 - x2) * (y3 - y4) - (y1 - y2) * (x3 - x4));\n  const y =\n    ((x1 * y2 - y1 * x2) * (y3 - y4) - (y1 - y2) * (x3 * y4 - y3 * x4)) /\n    ((x1 - x2) * (y3 - y4) - (y1 - y2) * (x3 - x4));\n  return { x, y };\n}\n\nexport default Line;\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\ninterface ErrorsState {\n  data: OdysError[];\n}\n\nexport interface OdysError {\n  message: string;\n}\n\nconst initialState: ErrorsState = {\n  data: [],\n};\n\nconst errorsSlice = createSlice({\n  name: 'errors',\n  initialState: initialState,\n  reducers: {\n    addError: (state: ErrorsState, action: PayloadAction<string>) => {\n      const error = { message: action.payload };\n      state.data.push(error);\n    },\n    clearErrors: (state: ErrorsState, action: PayloadAction) => {\n      state.data = [];\n    },\n  },\n});\n\nexport const { addError, clearErrors } = errorsSlice.actions;\nconst errorReducer = errorsSlice.reducer;\nexport default errorReducer;\n","import React from 'react';\nimport Arrowhead from './Arrowhead';\nimport { RectProps } from './Rect';\nimport Line, { intersects } from '../math/line';\nimport { RootState } from '../App';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Shape, { idFn, ShapeId, TextEditable } from './Shape';\nimport { selectShape } from '../reducers/shapes/shape';\nimport { zoomLeveltoScaleMap } from '../reducers/svg';\nimport { addError } from '../reducers/errors';\n\nexport type ArrowProps = {\n  type: 'arrow';\n\n  // connect to shapes\n  fromId: string;\n  toId: string;\n  createdAtZoomLevel: number;\n} & Shape &\n  TextEditable;\n\nconst Arrow: React.FC<ShapeId> = React.memo((props) => {\n  const { id } = props;\n  const dispatch = useDispatch();\n\n  function arrowheadRotation(x1: number, y1: number, x2: number, y2: number) {\n    return Math.atan2(y2 - y1, x2 - x1);\n  }\n\n  const arrow = useSelector(\n    (state: RootState) => state.shapes.data[id]\n  ) as ArrowProps;\n\n  // arrow goes FROM rect1 (r1)  TO rect2 (r)\n  const r1 = useSelector(\n    (state: RootState) => state.shapes.data[arrow.fromId]\n  ) as RectProps;\n  const r2 = useSelector(\n    (state: RootState) => state.shapes.data[arrow.toId]\n  ) as RectProps;\n\n  const isSelected = useSelector(\n    (state: RootState) => state.shapes.select?.id === id\n  );\n  const color = isSelected ? 'cornflowerblue' : 'gray';\n\n  const fontSize = 14 / zoomLeveltoScaleMap[arrow.createdAtZoomLevel];\n  const strokeWidth = 1 / zoomLeveltoScaleMap[arrow.createdAtZoomLevel];\n  const offset = 5 / zoomLeveltoScaleMap[arrow.createdAtZoomLevel];\n\n  if (!r1) {\n    dispatch(addError(`[r1Arrow] Could not find shape$ ${arrow.fromId}`));\n    return <></>;\n  }\n  if (!r2) {\n    dispatch(addError(`[r2Arrow] Could not find shape$ ${arrow.toId}`));\n    return <></>;\n  }\n\n  const r1X = r1.x + r1.translateX;\n  const r1Y = r1.y + r1.translateY;\n  const r1Height = r1.height + r1.deltaHeight;\n  const r1Width = r1.width + r1.deltaWidth;\n  const r1XMid = (r1X + (r1X + r1Width)) / 2;\n  const r1YMid = (r1Y + (r1Y + r1Height)) / 2;\n\n  const r2X = r2.x + r2.translateX;\n  const r2Y = r2.y + r2.translateY;\n  const r2Height = r2.height + r2.deltaHeight;\n  const r2Width = r2.width + r2.deltaWidth;\n  const r2XMid = (r2X + (r2X + r2Width)) / 2;\n  const r2YMid = (r2Y + (r2Y + r2Height)) / 2;\n\n  // get angle (in radians) of line from (0, 0) r2 (x, y).\n  // will be between 0 and 2 PI\n  const angle = (y: number, x: number): number => {\n    return Math.atan2(y, x) + Math.PI;\n  };\n\n  const r1NW = angle(r1Y - r1YMid, r1X - r1XMid);\n  const r1NE = angle(r1Y - r1YMid, r1X + r1Width - r1XMid);\n  const r1SW = angle(r1Y + r1Height - r1YMid, r1X - r1XMid);\n  const r1SE = angle(r1Y + r1Height - r1YMid, r1X + r1Width - r1XMid);\n  const r2NW = angle(r2Y - r2YMid, r2X - r2XMid);\n  const r2NE = angle(r2Y - r2YMid, r2X + r2Width - r2XMid);\n  const r2SW = angle(r2Y + r2Height - r2YMid, r2X - r2XMid);\n  const r2SE = angle(r2Y + r2Height - r2YMid, r2X + r2Width - r2XMid);\n\n  const r1Below = {\n    p: { x: r1X, y: r1Y + r1Height + offset },\n    q: { x: r1X + r1Width, y: r1Y + r1Height + offset },\n  };\n  const r1Above = {\n    p: { x: r1X, y: r1Y - offset },\n    q: { x: r1X + r1Width, y: r1Y - offset },\n  };\n  const r1Left = {\n    p: { x: r1X - offset, y: r1Y },\n    q: { x: r1X - offset, y: r1Y + r1Height },\n  };\n  const r1Right = {\n    p: { x: r1X + r1Width + offset, y: r1Y },\n    q: { x: r1X + r1Width + offset, y: r1Y + r1Height },\n  };\n\n  const r2Below = {\n    p: { x: r2X, y: r2Y + r2Height + offset },\n    q: { x: r2X + r2Width, y: r2Y + r2Height + offset },\n  };\n  const r2Above = {\n    p: { x: r2X, y: r2Y - offset },\n    q: { x: r2X + r2Width, y: r2Y - offset },\n  };\n  const r2Left = {\n    p: { x: r2X - offset, y: r2Y },\n    q: { x: r2X - offset, y: r2Y + r2Height },\n  };\n  const r2Right = {\n    p: { x: r2X + r2Width + offset, y: r2Y },\n    q: { x: r2X + r2Width + offset, y: r2Y + r2Height },\n  };\n\n  const slopeTheta = angle(r2YMid - r1YMid, r2XMid - r1XMid);\n  let r1Line: Line;\n  if (slopeTheta >= r1NW && slopeTheta < r1NE) {\n    r1Line = r1Above;\n  } else if (slopeTheta >= r1NE && slopeTheta < r1SE) {\n    r1Line = r1Right;\n  } else if (slopeTheta >= r1SE && slopeTheta < r1SW) {\n    r1Line = r1Below;\n  } else if (slopeTheta >= r1SW || slopeTheta < r1NW) {\n    r1Line = r1Left;\n  } else {\n    dispatch(addError('Could not determine r1Line for arrow offset'));\n    return <></>;\n  }\n\n  let r2Line: Line;\n  if (slopeTheta >= r2NW && slopeTheta < r2NE) {\n    r2Line = r2Below;\n  } else if (slopeTheta >= r2NE && slopeTheta < r2SE) {\n    r2Line = r2Left;\n  } else if (slopeTheta >= r2SE && slopeTheta < r2SW) {\n    r2Line = r2Above;\n  } else if (slopeTheta >= r2SW || slopeTheta < r2NW) {\n    r2Line = r2Right;\n  } else {\n    dispatch(addError('Could not determine r2Line for arrow offset'));\n    return <></>;\n  }\n\n  const slopeLine = {\n    p: { x: r1XMid, y: r1YMid },\n    q: { x: r2XMid, y: r2YMid },\n  };\n  const r1Offset = intersects(slopeLine, r1Line);\n  const r2Offset = intersects(slopeLine, r2Line);\n\n  const x1 = r1Offset.x;\n  const y1 = r1Offset.y;\n  const x2 = r2Offset.x;\n  const y2 = r2Offset.y;\n  const rotation = arrowheadRotation(x1, y1, x2, y2);\n\n  const left = false;\n  const right = true;\n\n  function handleMouseDown(e: React.MouseEvent) {\n    e.stopPropagation();\n    dispatch(selectShape(id));\n  }\n\n  return (\n    <g id={props.id} onMouseDown={(e) => handleMouseDown(e)}>\n      <line\n        x1={x1}\n        y1={y1}\n        x2={x2}\n        y2={y2}\n        stroke={color}\n        strokeWidth={strokeWidth + 'px'}\n      ></line>\n      {left ? (\n        <Arrowhead\n          id={idFn()}\n          x={0}\n          y={0}\n          direction=\"left\"\n          isSelected={isSelected}\n          rotationAngleFromXInRadians={rotation}\n          createdAtZoomLevel={arrow.createdAtZoomLevel}\n        ></Arrowhead>\n      ) : (\n        <></>\n      )}\n      {right ? (\n        <Arrowhead\n          id={idFn()}\n          x={x2}\n          y={y2}\n          direction=\"right\"\n          isSelected={isSelected}\n          rotationAngleFromXInRadians={rotation}\n          createdAtZoomLevel={arrow.createdAtZoomLevel}\n        ></Arrowhead>\n      ) : (\n        <></>\n      )}\n      <text\n        x={(x1 + x2) / 2}\n        y={(y1 + y2) / 2}\n        textAnchor=\"middle\"\n        textRendering=\"optimizeSpeed\"\n        fontSize={fontSize + 'px'}\n        onMouseDown={(e) => handleMouseDown(e)}\n      >\n        {arrow.text}\n      </text>\n    </g>\n  );\n});\n\nexport default Arrow;\n","import React from 'react';\nimport { startDrag } from '../reducers/shapes/shape';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { RootState } from '../App';\nimport Shape, { ShapeId, Selectable, Draggable, TextEditable } from './Shape';\n\nexport type TextProps = {\n  type: 'text';\n} & Shape &\n  Selectable &\n  Draggable &\n  TextEditable;\n\nconst Text: React.FC<ShapeId> = React.memo((props) => {\n  const { id } = props;\n  const dispatch = useDispatch();\n\n  const text = useSelector(\n    (state: RootState) => state.shapes.data[id]\n  ) as TextProps;\n  const transform = `translate(${text.x}, ${text.y})`;\n  const draggedId = useSelector(\n    (state: RootState) => state.shapes.drag && state.shapes.drag.id\n  );\n\n  const cursor = draggedId === props.id ? 'grabbing' : 'grab';\n\n  return (\n    <g\n      id={props.id}\n      transform={transform}\n      cursor={cursor}\n      onMouseDown={(e) =>\n        dispatch(\n          startDrag({ id: props.id, clickX: e.clientX, clickY: e.clientY })\n        )\n      }\n    >\n      <text style={{ textAnchor: 'middle' }}>\n        <tspan>{text.text}</tspan>\n      </text>\n    </g>\n  );\n});\n\nexport default Text;\n","import React from 'react';\nimport { v4 } from 'uuid';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { RootState } from '../App';\nimport Rect from './Rect';\nimport Arrow from './Arrow';\nimport Text from './Text';\nimport { addError } from '../reducers/errors';\n\nexport type ShapeType = 'rect' | 'text' | 'arrow';\n\nexport interface Draggable {\n  id: string;\n  x: number;\n  y: number;\n  translateX: number;\n  translateY: number;\n}\n\nexport interface Resizable {\n  id: string;\n  width: number;\n  height: number;\n  deltaWidth: number;\n  deltaHeight: number;\n}\n\nexport interface Selectable {\n  id: string;\n}\n\nexport interface TextEditable {\n  id: string;\n  text: string;\n}\n\nexport const idFn = () => `id-${v4()}`;\n\nexport interface ShapeId {\n  id: string;\n}\n\nexport const NewShape: React.FC<ShapeId> = (props) => {\n  const { id } = props;\n  const shape = useSelector((state: RootState) => state.shapes.data[id]);\n  const dispatch = useDispatch();\n\n  if (!shape) return <></>;\n  if (shape.type === 'rect') return <Rect id={id}></Rect>;\n  if (shape.type === 'arrow') return <Arrow id={id}></Arrow>;\n  if (shape.type === 'text') return <Text id={id}></Text>;\n  dispatch(addError(`unknown shape: ${shape.type}`));\n  return <></>;\n};\n\n// Shape can be drawn inside an SVG.\nexport default interface Shape {\n  id: string;\n  type: ShapeType;\n}\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { RootState } from '../App';\nimport { NewShape } from '../shapes/Shape';\n\nconst ShapesContainer: React.FC = React.memo(() => {\n  const shapeOrder = useSelector((state: RootState) => state.shapes.shapeOrder);\n\n  return (\n    <>\n      {shapeOrder.map((shapeId) => {\n        return <NewShape key={shapeId} id={shapeId}></NewShape>;\n      })}\n    </>\n  );\n});\n\nexport default ShapesContainer;\n","import React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { RootState } from '../App';\nimport { endGroupDrag } from '../reducers/shapes/shape';\n\ninterface GroupDragState {\n  startX: number;\n  startY: number;\n  x: number;\n  y: number;\n}\n\nconst GroupSelect: React.FC = () => {\n  const dispatch = useDispatch();\n  const selectionRect = useSelector(\n    (state: RootState) => state.shapes.groupSelect?.selectionRect\n  );\n  const selectionOutline = useSelector(\n    (state: RootState) => state.shapes.groupSelect?.outline\n  );\n  const svgScale = useSelector((state: RootState) => state.svg.scale);\n  const borderPadding = 20 / svgScale;\n  const dashArray = 5 / svgScale;\n\n  const [groupDrag, setGroupDrag] = useState<GroupDragState | null>(null);\n\n  function handleMouseDown(e: React.MouseEvent) {\n    e.stopPropagation();\n    setGroupDrag({ startX: e.clientX, startY: e.clientY, x: 0, y: 0 });\n  }\n\n  function handleMouseMove(e: MouseEvent) {\n    if (!groupDrag) return;\n    setGroupDrag({\n      ...groupDrag,\n      x: (e.clientX - groupDrag.startX) / svgScale,\n      y: (e.clientY - groupDrag.startY) / svgScale,\n    });\n  }\n\n  function handleMouseUp(e: MouseEvent) {\n    dispatch(\n      endGroupDrag({\n        translateX: (groupDrag && groupDrag.x) || 0,\n        translateY: (groupDrag && groupDrag.y) || 0,\n      })\n    );\n    setGroupDrag(null);\n  }\n\n  useEffect(() => {\n    if (!groupDrag) return;\n\n    window.addEventListener('mousemove', handleMouseMove, { capture: true });\n    window.addEventListener('mouseup', handleMouseUp, { capture: true });\n    return () => {\n      window.removeEventListener('mousemove', handleMouseMove, {\n        capture: true,\n      });\n      window.removeEventListener('mouseup', handleMouseUp, { capture: true });\n    };\n  });\n\n  if (selectionRect) {\n    return (\n      <rect\n        x={selectionRect.x}\n        y={selectionRect.y}\n        width={selectionRect.width}\n        height={selectionRect.height}\n        fill=\"#b3d4fc30\"\n        stroke=\"blue\"\n      ></rect>\n    );\n  } else if (selectionOutline) {\n    return (\n      <rect\n        x={\n          selectionOutline.x - borderPadding + ((groupDrag && groupDrag.x) || 0)\n        }\n        y={\n          selectionOutline.y - borderPadding + ((groupDrag && groupDrag.y) || 0)\n        }\n        width={selectionOutline.width + borderPadding + borderPadding}\n        height={selectionOutline.height + borderPadding + borderPadding}\n        fill=\"white\"\n        fillOpacity=\"0\"\n        stroke=\"black\"\n        strokeDasharray={dashArray + 'px'}\n        cursor=\"grab\"\n        onMouseDown={(e) => handleMouseDown(e)}\n      ></rect>\n    );\n  }\n  return <></>;\n};\n\nexport default GroupSelect;\n","import React, { useState, Dispatch, useEffect } from 'react';\nimport debounce from 'lodash.debounce';\nimport {\n  cancelSelect,\n  drag,\n  endDrag,\n  endNewRectByDrag,\n  resize,\n  endResize,\n  startNewRectByClick,\n  startNewRectByDrag,\n  startDragSelection,\n  resizeDragSelection,\n  endDragSelection,\n} from '../reducers/shapes/shape';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { RootState } from '../App';\nimport {\n  wheelEnd,\n  endPan,\n  zoomLeveltoScaleMap,\n  cleanSvg,\n} from '../reducers/svg';\nimport ShapesContainer from './ShapesContainer';\nimport { endNewRectByClick } from '../reducers/shapes/newRect';\nimport GroupSelect from './GroupSelect';\n\nconst debouncedOnWheelEnd = debounce(\n  (\n    dispatch: Dispatch<any>,\n    topLeftX: number,\n    topLeftY: number,\n    scale: number,\n    zoomLevel: number\n  ) => {\n    dispatch(wheelEnd({ topLeftX, topLeftY, scale, zoomLevel }));\n  },\n  150\n);\n\n// force `n` to be between min and max (inclusive)\nfunction bound(n: number, min: number, max: number): number {\n  return Math.min(Math.max(n, min), max);\n}\n\n// find nearest zoomLevel for a scale `k`. (round down)\nfunction zoomLevelBucket(existingZoomLevel: number, k: number): number {\n  const modifiedMap: { [key: number]: number } = {\n    ...zoomLeveltoScaleMap,\n    0: -Infinity,\n    10: Infinity,\n  };\n\n  const [lower, upper] = [\n    modifiedMap[existingZoomLevel - 1],\n    modifiedMap[existingZoomLevel + 1],\n  ];\n  if (k > lower && k < upper) {\n    return existingZoomLevel;\n  }\n\n  if (k <= lower) {\n    for (let n = 1; n < existingZoomLevel; n++) {\n      if (k <= modifiedMap[n]) {\n        return n;\n      }\n    }\n  } else if (k >= upper) {\n    for (let n = 9; n > existingZoomLevel; n--) {\n      if (k >= modifiedMap[n]) {\n        return n;\n      }\n    }\n  }\n  throw new Error(`Couldn't figure out a zoomLevel for scale ${k}`);\n}\n\ninterface PanState {\n  startX: number;\n  startY: number;\n}\n\nconst Svg: React.FC = () => {\n  const dispatch = useDispatch();\n  const isDragging = useSelector((state: RootState) => !!state.shapes.drag);\n  const isGroupSelecting = useSelector(\n    (state: RootState) => !!state.shapes.groupSelect?.selectionRect\n  );\n\n  const newRectByClickState = useSelector(\n    (state: RootState) => state.shapes.newRectByClick\n  );\n  const isNewRectByDragState = useSelector(\n    (state: RootState) => !!state.shapes.endNewRectByDrag\n  );\n\n  const svgState = useSelector((state: RootState) => state.svg);\n  const isResizing = useSelector((state: RootState) => !!state.shapes.resize);\n\n  // using local variable to make scale / pan fast!\n  const [topLeftX, setTopLeftX] = useState(svgState.topLeftX);\n  const [topLeftY, setTopLeftY] = useState(svgState.topLeftY);\n  const [translateX, setTranslateX] = useState(0);\n  const [translateY, setTranslateY] = useState(0);\n  const [scale, setScale] = useState(svgState.scale);\n  const [zoomLevel, setZoomLevel] = useState(svgState.zoomLevel);\n\n  const [pan, setPan] = useState<PanState | null>(null);\n\n  const [selectMode, setSelectMode] = useState(false);\n  const cursor = selectMode ? 'crosshair' : 'auto';\n\n  function onKeyDownHandler(e: KeyboardEvent) {\n    if (e.key === 'Shift') {\n      setSelectMode(true);\n    }\n  }\n\n  function onKeyUpHandler(e: KeyboardEvent) {\n    if (e.key === 'Shift') {\n      setSelectMode(false);\n    }\n  }\n\n  useEffect(() => {\n    window.addEventListener('keydown', onKeyDownHandler);\n    window.addEventListener('keyup', onKeyUpHandler);\n    return () => {\n      window.removeEventListener('keydown', onKeyDownHandler);\n      window.addEventListener('keyup', onKeyUpHandler);\n    };\n  });\n\n  if (svgState.dirty) {\n    setTopLeftX(svgState.topLeftX);\n    setTopLeftY(svgState.topLeftY);\n    setScale(svgState.scale);\n    setZoomLevel(svgState.zoomLevel);\n    dispatch(cleanSvg());\n  }\n\n  const transform = `translate(${topLeftX + translateX}, ${\n    topLeftY + translateY\n  }) scale(${scale})`;\n\n  function handleMouseMove(e: React.MouseEvent) {\n    if (isNewRectByDragState) {\n      dispatch(\n        endNewRectByDrag({\n          clickX: e.clientX,\n          clickY: e.clientY,\n          svgTopLeftX: svgState.topLeftX,\n          svgTopLeftY: svgState.topLeftY,\n          svgScale: svgState.scale,\n          svgZoomLevel: svgState.zoomLevel,\n        })\n      );\n    }\n\n    if (isDragging) {\n      dispatch(\n        drag({\n          clickX: e.clientX,\n          clickY: e.clientY,\n          scale: svgState.scale,\n        })\n      );\n    }\n\n    if (isGroupSelecting) {\n      dispatch(\n        resizeDragSelection({\n          clickX: e.clientX,\n          clickY: e.clientY,\n          svgTopLeftX: svgState.topLeftX,\n          svgTopLeftY: svgState.topLeftY,\n          svgScale: svgState.scale,\n        })\n      );\n    }\n\n    if (pan !== null) {\n      setTranslateX(e.clientX - pan.startX);\n      setTranslateY(e.clientY - pan.startY);\n    }\n\n    if (isResizing) {\n      dispatch(\n        resize({\n          clickX: e.clientX,\n          clickY: e.clientY,\n          svgScale: svgState.scale,\n        })\n      );\n    }\n  }\n\n  function handleMouseDown(e: React.MouseEvent) {\n    dispatch(cancelSelect());\n\n    if (e.altKey) {\n      dispatch(startNewRectByClick({ clickX: e.clientX, clickY: e.clientY }));\n      dispatch(startNewRectByDrag({ clickX: e.clientX, clickY: e.clientY }));\n    } else if (selectMode) {\n      dispatch(\n        startDragSelection({\n          x: e.clientX,\n          y: e.clientY,\n          svgTopLeftX: topLeftX,\n          svgTopLeftY: topLeftY,\n          svgScale: scale,\n        })\n      );\n    } else {\n      setPan({ startX: e.clientX, startY: e.clientY });\n    }\n  }\n\n  function handleMouseUp(e: React.MouseEvent) {\n    if (\n      newRectByClickState &&\n      newRectByClickState.clickX === e.clientX &&\n      newRectByClickState.clickY === e.clientY\n    ) {\n      dispatch(\n        endNewRectByClick({\n          clickX: e.clientX,\n          clickY: e.clientY,\n        })\n      );\n    }\n\n    if (isDragging) {\n      dispatch(endDrag());\n    }\n    if (isGroupSelecting) {\n      dispatch(endDragSelection());\n    }\n\n    if (pan !== null) {\n      setPan(null);\n      setTopLeftX(topLeftX + translateX);\n      setTopLeftY(topLeftY + translateY);\n      setTranslateX(0);\n      setTranslateY(0);\n      dispatch(endPan({ topLeftX, topLeftY }));\n    }\n\n    if (isResizing) {\n      dispatch(endResize());\n    }\n  }\n\n  function handleWheel(e: React.WheelEvent) {\n    const invertX = (e.clientX - topLeftX) / scale;\n    const invertY = (e.clientY - topLeftY) / scale;\n    const scaleFactor =\n      -e.deltaY * (e.deltaMode === 1 ? 0.05 : e.deltaMode ? 1 : 0.002);\n\n    const updatedScale = bound(\n      scale * Math.pow(2, scaleFactor),\n      1 * 8 ** -4,\n      1 * 8 ** 4\n    );\n    const updatedTopLeftX = e.clientX - invertX * updatedScale;\n    const updatedTopLeftY = e.clientY - invertY * updatedScale;\n\n    setScale(updatedScale);\n    setTopLeftX(updatedTopLeftX);\n    setTopLeftY(updatedTopLeftY);\n    setZoomLevel(zoomLevelBucket(zoomLevel, updatedScale));\n    debouncedOnWheelEnd(\n      dispatch,\n      updatedTopLeftX,\n      updatedTopLeftY,\n      updatedScale,\n      zoomLevel\n    );\n  }\n\n  return (\n    <svg\n      id=\"odys-svg\"\n      style={{\n        height: '100%',\n        width: '100%',\n        background: 'var(--odys-background-gray)',\n      }}\n      onMouseMove={(e) => handleMouseMove(e)}\n      onMouseDown={(e) => handleMouseDown(e)}\n      onMouseUp={(e) => handleMouseUp(e)}\n      onWheel={(e) => handleWheel(e)}\n      cursor={cursor}\n    >\n      <g id=\"odys-zoomable-group\" transform={transform}>\n        <ShapesContainer></ShapesContainer>\n        <GroupSelect></GroupSelect>\n      </g>\n    </svg>\n  );\n};\n\nexport default Svg;\n","import React, { useEffect, useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectedShapeEditText, deleteShape } from '../reducers/shapes/shape';\nimport { RootState, OdysDispatch } from '../App';\n\n// add delete key handler\nfunction onKeyDownHandler(\n  dispatch: OdysDispatch,\n  id: string,\n  isEditing: boolean\n) {\n  return (e: KeyboardEvent) => {\n    if (e.code === 'Backspace' && isEditing === false) {\n      dispatch(deleteShape(id));\n    }\n  };\n}\n\nconst HiddenTextInput: React.FC = React.memo(() => {\n  const dispatch = useDispatch();\n\n  const select = useSelector((state: RootState) => state.shapes.select);\n\n  const id = select?.id;\n  const isEditing = select?.isEditing;\n\n  // This selector will refresh this component whenver the\n  // selected shape changes (e.g. resize). This should trigger\n  // focus onto this hidden input.\n  const shape = useSelector((state: RootState) => id && state.shapes.data[id]);\n\n  useEffect(() => {\n    if (id === undefined || isEditing === undefined) return;\n    const handler = onKeyDownHandler(dispatch, id, isEditing);\n    window.addEventListener('keydown', handler, { capture: true });\n    return () => {\n      window.removeEventListener('keydown', handler, { capture: true });\n    };\n  });\n\n  const inputEl = useRef<HTMLInputElement>(null);\n  const text = shape && (shape as any).text;\n  const inputValue = !!isEditing && text ? text : '';\n  useEffect(() => {\n    if (inputEl && inputEl.current) {\n      inputEl.current.focus();\n    }\n  });\n\n  const onInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    dispatch(selectedShapeEditText(event.target.value));\n  };\n\n  if (!id) return <></>;\n  return (\n    <>\n      <input\n        style={{ height: '0px', padding: '0px', border: '0px', opacity: 0 }}\n        ref={inputEl}\n        type=\"text\"\n        onChange={onInputChange}\n        value={inputValue}\n      />\n    </>\n  );\n});\n\nexport default HiddenTextInput;\n","import React, { useEffect } from 'react';\nimport Svg from './Svg';\nimport { RECT_HEIGHT, RECT_WIDTH, RectProps } from '../shapes/Rect';\nimport { v4 } from 'uuid';\nimport HiddenTextInput from './HiddenTextInput';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addShape } from '../reducers/shapes/shape';\nimport { RootState } from '../App';\nimport Shape from '../shapes/Shape';\nimport { ArrowProps } from '../shapes/Arrow';\n\nconst id = () => `id-${v4()}`;\n\nconst DrawingBoard: React.FC = () => {\n  const dispatch = useDispatch();\n  const shapes = useSelector((state: RootState) => state.shapes);\n\n  // temp seed data\n  if (Object.entries(shapes.data).length === 0) {\n    const rect1Id = id();\n    const rect2Id = id();\n\n    const arrow: ArrowProps = {\n      type: 'arrow',\n      id: id(),\n      fromId: rect1Id,\n      toId: rect2Id,\n      text: '',\n      createdAtZoomLevel: 5,\n    };\n\n    const rect = (text: string, x: number, y: number): RectProps => {\n      return {\n        type: 'rect',\n        id: id(),\n        text: text,\n        x: x,\n        y: y,\n        translateX: 0,\n        translateY: 0,\n        width: RECT_WIDTH,\n        height: RECT_HEIGHT,\n        deltaWidth: 0,\n        deltaHeight: 0,\n        isGroupingRect: false,\n        createdAtZoomLevel: 5,\n      };\n    };\n    dispatch(addShape(rect('A', 150, 100)));\n    dispatch(addShape(rect('B', 400, 100)));\n  }\n\n  return (\n    <>\n      <Svg></Svg>\n      <div style={{ opacity: 0, display: 'flex', flex: '0 0', height: '0px' }}>\n        <HiddenTextInput></HiddenTextInput>\n      </div>\n    </>\n  );\n};\n\nexport default DrawingBoard;\n","import React, { useState, useEffect } from 'react';\nimport plus from '../plus.svg';\nimport minus from '../minus.svg';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { RootState } from '../App';\nimport { changeZoomLevel, dirtySvg } from '../reducers/svg';\n\ninterface Cursor {\n  x: number;\n  y: number;\n}\n\ninterface PositionDisplayProps {\n  topLeftX: number;\n  topLeftY: number;\n  scale: number;\n}\n\ninterface ZoomLevelDisplayProps {\n  zoomLevel: number;\n}\n\nfunction onMouseMove(\n  topLeftX: number,\n  topLeftY: number,\n  scale: number,\n  setCursor: React.Dispatch<React.SetStateAction<Cursor>>\n) {\n  return (e: MouseEvent) => {\n    const x = (e.clientX - topLeftX) / scale;\n    const y = (e.clientY - topLeftY) / scale;\n    setCursor({ x, y });\n  };\n}\n\nconst Cockpit: React.FC = () => {\n  const svgState = useSelector((state: RootState) => state.svg);\n  const { topLeftX, topLeftY, scale, zoomLevel } = svgState;\n\n  const PositionDisplay: React.FC<PositionDisplayProps> = (props) => {\n    const [cursor, setCursor] = useState<Cursor>({ x: 0, y: 0 });\n    const { topLeftX, topLeftY, scale } = props;\n\n    useEffect(() => {\n      const mouseMoveFn = onMouseMove(topLeftX, topLeftY, scale, setCursor);\n      window.addEventListener('mousemove', mouseMoveFn);\n      return () => window.removeEventListener('mousemove', mouseMoveFn);\n    }, [topLeftX, topLeftY, scale, setCursor]);\n\n    return (\n      <div\n        style={{\n          display: 'flex',\n          flexFlow: 'row nowrap',\n          backgroundColor: 'white',\n          borderRadius: '8px',\n          boxShadow: '0px 4px 2px -2px grey',\n          border: '1px rgba(204,204,204,0.5) solid',\n          padding: '12px',\n          minWidth: '100px',\n          maxWidth: '200px',\n          justifyContent: 'space-around',\n          fontSize: '12px',\n        }}\n      >\n        <p\n          style={{\n            borderTopLeftRadius: '8px',\n            borderBottomLeftRadius: '8px',\n            backgroundColor: 'white',\n          }}\n        >\n          {cursor.x.toFixed(2)}\n        </p>\n        <p\n          style={{\n            borderLeft: '1px rgba(204, 204, 204, 0.5) solid',\n            margin: '-3px 5px',\n          }}\n        ></p>\n        <p\n          style={{\n            borderTopRightRadius: '8px',\n            borderBottomRightRadius: '8px',\n            backgroundColor: 'white',\n          }}\n        >\n          {cursor.y.toFixed(2)}\n        </p>\n      </div>\n    );\n  };\n\n  const ZoomLevelDisplay: React.FC<ZoomLevelDisplayProps> = (props) => {\n    const dispatch = useDispatch();\n    const { zoomLevel } = props;\n\n    function incrementZoomLevel() {\n      dispatch(changeZoomLevel({ zoomLevel: zoomLevel + 1 }));\n      dispatch(dirtySvg());\n    }\n\n    function decrementZoomLevel() {\n      dispatch(changeZoomLevel({ zoomLevel: zoomLevel - 1 }));\n      dispatch(dirtySvg());\n    }\n\n    return (\n      <div\n        style={{\n          display: 'flex',\n          flexFlow: 'column nowrap',\n          backgroundColor: 'white',\n          borderRadius: '8px',\n          boxShadow: '0px 4px 2px -2px grey',\n          border: '1px rgba(204,204,204,0.5) solid',\n          padding: '6px',\n          justifyContent: 'space-around',\n          fontSize: '18px',\n          alignSelf: 'flex-end',\n          marginBottom: '5px',\n        }}\n      >\n        <img\n          src={plus}\n          alt=\"+\"\n          style={{ height: '12px', padding: '4px' }}\n          onClick={() => incrementZoomLevel()}\n        />\n        <p\n          style={{\n            borderTop: '1px rgba(204, 204, 204, 0.5) solid',\n            borderBottom: '1px rgba(204, 204, 204, 0.5) solid',\n            padding: '6px',\n            margin: '3px -1px',\n            fontSize: '14px',\n          }}\n        >\n          {zoomLevel}\n        </p>\n        <img\n          src={minus}\n          alt=\"-\"\n          style={{ height: '12px', padding: '4px' }}\n          onClick={() => decrementZoomLevel()}\n        />\n      </div>\n    );\n  };\n\n  return (\n    <div style={{ display: 'flex', flexFlow: 'column nowrap' }}>\n      <ZoomLevelDisplay zoomLevel={zoomLevel}></ZoomLevelDisplay>\n      <PositionDisplay\n        topLeftX={topLeftX}\n        topLeftY={topLeftY}\n        scale={scale}\n      ></PositionDisplay>\n    </div>\n  );\n};\n\nexport default Cockpit;\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { RootState } from '../App';\nimport { clearErrors } from '../reducers/errors';\n\ninterface ToastContent {\n  message: string;\n}\n\nconst Toast: React.FC<ToastContent> = (props) => {\n  const dispatch = useDispatch();\n  return (\n    <div\n      style={{\n        backgroundColor: 'rgba(208, 0, 0, 0.05)',\n        border: '1px solid rgb(208, 0, 0)',\n        boxShadow: 'rgb(208, 0, 0) 0px 4px 2px -2px',\n        width: '200px',\n        borderRadius: '20px',\n        minHeight: '30px',\n        paddingLeft: '10px',\n        paddingRight: '10px',\n        paddingBottom: '20px',\n        margin: '5px 0px',\n        fontSize: 'small',\n      }}\n    >\n      <div\n        style={{\n          display: 'flex',\n          paddingRight: '5px',\n          paddingBottom: '5px',\n          justifyContent: 'flex-end',\n        }}\n      >\n        <p onClick={(e) => dispatch(clearErrors())}>x</p>\n      </div>\n      <span>{props.message}</span>\n    </div>\n  );\n};\n\nconst ToastContainer: React.FC = () => {\n  const errors = useSelector((state: RootState) => state.errors);\n\n  return (\n    <div style={{ display: 'flex', flexFlow: 'column nowrap' }}>\n      {errors.data.map((e, i) => (\n        <Toast key={i} message={e.message}></Toast>\n      ))}\n    </div>\n  );\n};\n\nexport default ToastContainer;\n","import React from 'react';\nimport DrawingBoard from '../components/DrawingBoard';\nimport Cockpit from '../components/Cockpit';\nimport ToastContainer from '../components/ToastContainer';\n\nconst DrawingPage: React.FC = () => {\n  return (\n    <div\n      style={{\n        height: '100%',\n        width: '100%',\n      }}\n      className=\"row\"\n    >\n      <div className=\"col flex-elem\">\n        <DrawingBoard></DrawingBoard>\n      </div>\n      <div\n        style={{\n          position: 'absolute',\n          bottom: '10px',\n          right: '10px',\n        }}\n      >\n        <Cockpit></Cockpit>\n      </div>\n      <div\n        style={{\n          position: 'absolute',\n          top: '10px',\n          right: '10px',\n        }}\n      >\n        <ToastContainer></ToastContainer>\n      </div>\n    </div>\n  );\n};\n\nexport default DrawingPage;\n","import React from 'react';\nimport { configureStore, combineReducers } from '@reduxjs/toolkit';\nimport { Provider } from 'react-redux';\nimport { ApolloProvider } from '@apollo/react-hooks';\nimport ApolloClient from 'apollo-boost';\n\nimport DrawingPage from './pages/DrawingPage';\nimport Scratch from './pages/Scratch';\n\nimport Users from './components/Users';\n\nimport shapesReducer from './reducers/shapes/shape';\nimport svgReducer from './reducers/svg';\n\nimport errorReducer from './reducers/errors';\n\nconst rootReducer = combineReducers({\n  shapes: shapesReducer,\n  svg: svgReducer,\n  errors: errorReducer,\n});\nexport type RootState = ReturnType<typeof rootReducer>;\n\nconst store = configureStore({\n  reducer: rootReducer,\n});\n\nconst client = new ApolloClient();\n\nexport type OdysDispatch = typeof store.dispatch;\n\nconst App: React.FC = () => {\n  return (\n    <ApolloProvider client={client}>\n      <Provider store={store}>\n        <DrawingPage></DrawingPage>\n        {/* <Scratch></Scratch> */}\n      </Provider>\n    </ApolloProvider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n// import ApolloClient from 'apollo-client';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}